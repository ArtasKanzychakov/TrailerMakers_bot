import os  
from aiogram import Bot, Dispatcher, types  
from aiogram.filters import Command  
from aiogram.fsm.context import FSMContext  
from dotenv import load_dotenv  
from database import Session, Project  
from states import ProjectCreation  
from keyboards import admin_menu  

load_dotenv()  
bot = Bot(token=os.getenv("BOT_TOKEN"))  
dp = Dispatcher()  

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∞–¥–º–∏–Ω–∞  
def is_admin(user_id: int) -> bool:  
    return user_id in [123456789]  # –í–∞—à ID  

# –ö–æ–º–∞–Ω–¥–∞ /admin  
@dp.message(Command("admin"))  
async def admin_access(message: types.Message):  
    if message.text.split()[-1] == os.getenv("ADMIN_KEYWORD"):  
        await message.answer("üîê –í—ã –≤–æ—à–ª–∏ –∫–∞–∫ –∞–¥–º–∏–Ω!", reply_markup=admin_menu())  

# –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞  
@dp.message(lambda m: m.text == "‚ûï –°–æ–∑–¥–∞—Ç—å –ø—Ä–æ–µ–∫—Ç" and is_admin(m.from_user.id))  
async def create_project_start(message: types.Message, state: FSMContext):  
    await message.answer("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –ø—Ä–æ–µ–∫—Ç–∞:")  
    await state.set_state(ProjectCreation.name)  

# –ü–æ–ª–Ω—ã–π –∫–æ–¥ —Å FSM-–º–∞—à–∏–Ω–æ–π –∏ –æ—Å—Ç–∞–ª—å–Ω—ã–º–∏ —Ö—ç–Ω–¥–ª–µ—Ä–∞–º–∏...  

if __name__ == "__main__":  
    dp.run_polling(bot)  
